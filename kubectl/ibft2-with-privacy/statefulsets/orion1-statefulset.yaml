
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: orion1-sa
  namespace: besu

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: orion1-key-read-role
  namespace: besu
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: [ besu-orion1-key ]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: orion1-rb
  namespace: besu
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: orion1-key-read-role
subjects:
  - kind: ServiceAccount
    name: orion1-sa
    namespace: besu

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: orion1
  labels:
    app: orion1
  namespace: besu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orion1
  serviceName: besu-orion1
  template:
    metadata:
      labels:
        app: orion1
    spec:
      serviceAccountName: orion1-sa
      containers:
        - name: orion1
          image: pegasyseng/orion:develop
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: key
              mountPath: /secrets
              readOnly: true
            - name: orion-conf
              mountPath: /configs-ro
              readOnly: true
            - name: orion-pubkey
              mountPath: /configs/keys
              readOnly: true
            - name: orion-init
              mountPath: /scripts/orion-init.sh
              subPath: orion-init.sh
          ports:
            - containerPort: 8888
              name: nodeport
              protocol: TCP
            - containerPort: 8080
              name: clientport
              protocol: TCP
          command:
            - /bin/sh
            - -c
            - /scripts/orion-init.sh
          livenessProbe:
            httpGet:
              path: /upcheck
              port: 8888
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /upcheck
              port: 8888
            initialDelaySeconds: 180
            periodSeconds: 30
      volumes:
        - name: orion-conf
          configMap:
            name: orion1-configmap
            items:
              - key: orion.conf
                path: orion.conf
        - name: orion-pubkey
          configMap:
            name: orion1-configmap
            items:
              - key: publicKey
                path: orion.pub
        - name: key
          secret:
            secretName: besu-orion1-key
        - name: orion-init
          configMap:
            name: besu-orion-init
            defaultMode: 0777
