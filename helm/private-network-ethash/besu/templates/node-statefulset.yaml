apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "besu.fullname" . }}-node
  labels:
    app: {{ template "besu.name" . }}
    chart: {{ template "besu.chart" . }}
    release: {{ .Release.Name }}
    namespace: {{ .Release.Namespace }}
    heritage: {{ .Release.Service }}
    component: node
spec:
  replicas: {{ .Values.node.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "besu.name" . }}
      release: {{ .Release.Name }}
      component: node
  serviceName: {{ template "besu.fullname" . }}-node
  template:
    metadata:
      labels:
        app: {{ template "besu.name" . }}
        release: {{ .Release.Name }}
        component: node
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9545"
        prometheus.io/path: "/metrics"
    spec:
      initContainers:
        - name: init-bootnode2
          image: byrnedo/alpine-curl
          command:
            - "sh"
            - "-c"
            - "curl -X GET --connect-timeout 30 --max-time 10 --retry 6 --retry-delay 0 --retry-max-time 300 ${BESU_BOOTNODE1_SERVICE_HOST}:8545/liveness"
      containers:
        - name: node
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BOOTNODE1_PUBKEY
              valueFrom:
                configMapKeyRef:
                  name: besu-configmap
                  key: bootnode1PubKey
            - name: BOOTNODE2_PUBKEY
              valueFrom:
                configMapKeyRef:
                  name: besu-configmap
                  key: bootnode2PubKey
            - name: NODES_HTTP_CORS_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: besu-configmap
                  key: nodesHttpCorsOrigins
            - name: NODES_HOST_WHITELIST
              valueFrom:
                configMapKeyRef:
                  name: besu-configmap
                  key: nodesHostWhitelist
          volumeMounts:
            - name: genesis-config
              mountPath: /configs
              readOnly: true
          ports:
            - containerPort: 8545
              name: http
              protocol: TCP
            - containerPort: 8546
              name: ws
              protocol: TCP
            - containerPort: 8547
              name: graphql
              protocol: TCP
            - containerPort: 30303
              name: dev-p2p-tcp
              protocol: TCP
            - containerPort: 30303
              name: dev-p2p-udp
              protocol: UDP
          command:
            - /bin/sh
            - -c
          args:
            - |
              exec /opt/besu/bin/besu \
                --genesis-file=/configs/genesis.json \
                --rpc-http-enabled \
                --rpc-http-host=0.0.0.0 \
                --rpc-http-port=8545 \
                --rpc-http-cors-origins=${NODES_HTTP_CORS_ORIGINS} \
                --rpc-ws-enabled \
                --rpc-ws-host=0.0.0.0 \
                --rpc-ws-port=8546 \
                --graphql-http-enabled \
                --graphql-http-host=0.0.0.0 \
                --graphql-http-port=8547 \
                --graphql-http-cors-origins=${NODES_HTTP_CORS_ORIGINS} \
                --metrics-enabled=true \
                --metrics-host=0.0.0.0 \
                --metrics-port=9545 \
                --host-whitelist=${NODES_HOST_WHITELIST} \
                --bootnodes=enode://${BOOTNODE1_PUBKEY}@${BESU_BOOTNODE1_SERVICE_HOST}:30303,enode://${BOOTNODE2_PUBKEY}@${BESU_BOOTNODE2_SERVICE_HOST}:30303
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8545
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8545
            initialDelaySeconds: 120
            periodSeconds: 30  
      volumes:
        - name: genesis-config
          configMap:
            name: besu-configmap
            items:
              - key: genesis.json
                path: genesis.json
